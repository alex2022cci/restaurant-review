security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AuthentificationAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            form_login:
                login_path: login
                check_path: login
                # csrf_token_generator: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.8
                # csrf_token_id: authenticate
                # use_referer: true
                # always_use_default_target_path: true
                # default_target_path: /
                # target_path_parameter: _target_path
                # use_referer: true
                # failure_path: null
                # failure_forward: false
                # username_parameter: _username
                # password_parameter: _password
                # csrf_parameter: _csrf_token
                # intention: authenticate
                # post_only: true
                # remember_me: true
                # remember_me_parameter: _remember_me
                # require_previous_session: false
                # success_handler: security.authentication.custom_success_handler
                # failure_handler: security.authentication.custom_failure_handler
                # check_path: /login_check
                # login_path: /login
                # always_use_default_target_path: false
                # default_target_path: /
                # target_path_parameter: _target_path
                # use_referer: false
                # failure_path: null
                # failure_forward: false
                # username_parameter: _username
                # password_parameter: _password
                # csrf_parameter: _csrf_token
                # intention: authenticate
                # post_only: true
                # remember_me: true
                # remember_me_parameter: _remember_me
                # require_previous_session: false
                # success_handler: security.authentication.custom_success_handler
                # failure_handler: security.authentication.custom_failure_handler

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
